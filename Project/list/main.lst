C51 COMPILER V9.60.7.0   MAIN                                                              09/07/2023 11:14:38 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\output\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE source\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\inc) DEBUG OBJECTEXTEND 
                    -PRINT(.\list\main.lst) TABS(2) OBJECT(.\output\main.obj)

line level    source

   1          #include "STC15F2K60S2.H"
   2          #include "sys.H"
   3          #include "uart1.h"
   4          #include "displayer.h"
   5          #include "Vib.h"
   6          #include "Key.H"
   7          #include "adc.h"
   8          
   9          code unsigned long SysClock=11059200;
  10          
  11          code char decode_table[] = {
  12            0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,
  13            0x00,0x6d,0x1c,0x54,0x39,0x38,0x5c,0x5e,0x50,0x77,0x04,0x79,0x80,0x40};
  14          /*
  15            10 (empty)
  16            11 S
  17            12 u
  18            13 n
  19            14 C
  20            15 L
  21            16 o
  22            17 d
  23            18 r
  24            19 A
  25            20 i
  26            21 E
  27            22 .
  28            23 -
  29            */
  30          
  31          code char weat2code_table[6][5] = {
  32            {11, 12, 13, 10, 10}, // Sun
  33            {14, 15, 16, 12, 17}, // CLoud
  34            {18, 19, 20, 13, 10}, // rAin
  35            {11, 13, 16, 12, 10}, // Snou
  36            {21, 18, 18, 16, 18}, // Error
  37            {22, 22, 22, 22, 22}  // ..... (waiting for sync)
  38          };
  39          
  40          struct_ADC adc_data;
  41          code int tempdata[]={239,197,175,160,150,142,135,129,124,120,116,113,109,107,104,101,99,97,95,93,91,90,88,
             -86,85,84,82,81,80,78,77,76,75,74,73,72,71,70,69,68,67,67,66,65,64,63,63,62,61,61,60,59,58,58,57,57,56,55,55,54,54,53,52,
             -52,51,51,50,50,49,49,48,48,47,47,46,46,45,45,44,44,43,43,42,42,41,41,41,40,40,39,39,38,38,38,37,37,36,36,36,35,35,34,34,
             -34,33,33,32,32,32,31,31,31,30,30,29,29,29,28,28,28,27,27,27,26,26,26,25,25,24,24,24,23,23,23,22,22,22,21,21,21,20,20,20,
             -19,19,19,18,18,18,17,17,16,16,16,15,15,15,14,14,14,13,13,13,12,12,12,11,11,11,10,10,9,9,9,8,8,8,7,7,7,6,6,5,5,54,4,3,3,3
             -,2,2,1,1,1,0,0,-1,-1,-1,-2,-2,-3,-3,-4,-4,-5,-5,-6,-6,-7,-7,-8,-8,-9,-9,-10,-10,-11,-11,-12,-13,-13,-14,-14,-15,-16,-16,
             --17,-18,-19,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-32,-33,-35,-36,-38,-40,-43,-46,-50,-55,-63,361};
  42          unsigned int t=0, sumt=0;
  43          
  44          char matchhead[2]={0xaa,0x55};
  45          char rxd[5],ack[5];
  46          
  47          char buf[3][8] = {
  48            {22,22,22,22,22,10,22,22},
C51 COMPILER V9.60.7.0   MAIN                                                              09/07/2023 11:14:38 PAGE 2   

  49            {10,10,10,10,10,10,22,22},
  50            {10,10,10,10,10,10,10,22}
  51          };
  52          
  53          char req[5] = {0xaa,0x55,0xff,0xff,0xff};
  54          
  55          char show = 0;
  56          
  57          void uart1rxd_callback();
  58          void sys100ms_callback();
  59          void sys1ms_callback();
  60          void vib_callback();
  61          void key_callback();
  62          void nav_callback();
  63          
  64          void main()
  65          {
  66   1        VibInit();
  67   1        Uart1Init(2400);
  68   1        DisplayerInit();
  69   1        SetDisplayerArea(0,7);
  70   1        KeyInit();
  71   1        AdcInit(ADCexpEXT);
  72   1        
  73   1        SetUart1Rxd(rxd, 5, matchhead, 2);
  74   1        SetEventCallBack(enumEventUart1Rxd, uart1rxd_callback);
  75   1        SetEventCallBack(enumEventSys100mS, sys100ms_callback);
  76   1        SetEventCallBack(enumEventSys1mS, sys1ms_callback);
  77   1        SetEventCallBack(enumEventVib, vib_callback);
  78   1        SetEventCallBack(enumEventKey, key_callback);
  79   1        SetEventCallBack(enumEventNav, nav_callback);
  80   1        
  81   1        MySTC_Init();
  82   1        while (1) MySTC_OS();
  83   1      }
  84          
  85          void set_buf_error(){
  86   1        int i;
  87   1        for (i=0;i<5;i++) buf[0][i] = weat2code_table[3][i];
  88   1        for (i=5;i<8;i++) buf[0][i] = 10;
  89   1      }
  90          
  91          void set_buf_weat(char weat){
  92   1        int i;
  93   1        if (weat > 3){
  94   2          set_buf_error();
  95   2          return;
  96   2        }
  97   1        for (i=0;i<5;i++) buf[0][i] = weat2code_table[weat][i];
  98   1      }
  99          
 100          void set_buf_temp(int target, signed char temp){
 101   1        if (temp < 0) buf[target][5] = 23, temp=-temp;
 102   1        buf[target][6] = temp/10 % 10;
 103   1        buf[target][7] = temp % 10;
 104   1      }
 105          
 106          void update_data(){
 107   1        Uart1Print(req, 5); // send request
 108   1      }
 109          
 110          void set_buf_rg(char f){ // rain gear
C51 COMPILER V9.60.7.0   MAIN                                                              09/07/2023 11:14:38 PAGE 3   

 111   1        buf[2][7] = f?18:16;
 112   1      }
 113          
 114          void uart1rxd_callback(){
 115   1        //int i;
 116   1        //for (i=0;i<5;i++) ack[i] = rxd[i];
 117   1      
 118   1        set_buf_weat(rxd[2]);
 119   1        set_buf_temp(0,rxd[3]);
 120   1        
 121   1        set_buf_rg(rxd[2] == 2 || rxd[2] == 3);
 122   1        
 123   1        //Uart1Print(ack, 5);
 124   1      }
 125          
 126          void sys100ms_callback(){
 127   1        Seg7Print(buf[show][0],buf[show][1],buf[show][2],buf[show][3],buf[show][4],buf[show][5],buf[show][6],buf
             -[show][7]);
 128   1      }
 129          
 130          void sys1ms_callback(){
 131   1        t++;
 132   1        if (t == 200){
 133   2          set_buf_temp(1, tempdata[(sumt+t/2)/t - 1]);
 134   2          sumt = t = 0;
 135   2        }
 136   1        adc_data = GetADC();
 137   1        sumt += adc_data.Rt >> 2;
 138   1      }
 139          
 140          void vib_callback(){
 141   1        char vib_act = GetVibAct();
 142   1        if (vib_act == enumVibQuake) update_data();
 143   1      }
 144          
 145          void key_callback(){
 146   1        if (GetKeyAct(enumKey1) == enumKeyRelease){
 147   2          show = 0;
 148   2        }
 149   1        if (GetKeyAct(enumKey2) == enumKeyRelease){
 150   2          show = 1;
 151   2        }
 152   1        // When ADC enabled, K3 is managed by ADC module
 153   1      //  if (GetKeyAct(enumKey3) == enumKeyRelease){
 154   1      //    show = 2;
 155   1      //  }
 156   1      }
 157          
 158          void nav_callback(){
 159   1        if (GetAdcNavAct(enumAdcNavKey3) == enumKeyRelease){
 160   2          show = 2;
 161   2        }
 162   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    637    ----
   CONSTANT SIZE    =    566    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     56    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.60.7.0   MAIN                                                              09/07/2023 11:14:38 PAGE 4   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
